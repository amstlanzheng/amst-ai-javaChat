<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.amst.ai.agent.mapper.CourseMapper">

    <resultMap id="BaseResultMap" type="com.amst.ai.agent.model.entity.CourseEntity">
        <!--@Table course-->
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="edu" column="edu" jdbcType="INTEGER"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="INTEGER"/>
        <result property="duration" column="duration" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,edu,type,price,duration
    </sql>

    <!--查询单个-->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from course
        where id = #{id}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id,name,edu,type,price,duration

        from tq_mobile.course
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from course
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="edu != null">
                and edu = #{edu}
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="duration != null">
                and duration = #{duration}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into course(name, edu, type, price, duration)
        values (#{name}, #{edu}, #{type}, #{price}, #{duration})
    </insert>


    <insert id="insertSelective" keyProperty="id" useGeneratedKeys="true">
        insert into course
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="name != null and name != ''">
                    name,
                </if>
                <if test="edu != null">
                    edu,
                </if>
                <if test="type != null and type != ''">
                    type,
                </if>
                <if test="price != null">
                    price,
                </if>
                <if test="duration != null">
                    duration,
                </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">
                #{name},
            </if>
            <if test="edu != null">
                #{edu},
            </if>
            <if test="type != null and type != ''">
                #{type},
            </if>
            <if test="price != null">
                #{price},
            </if>
            <if test="duration != null">
                #{duration},
            </if>
        </trim>
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into course(name, edu, type, price, duration)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.name}, #{entity.edu}, #{entity.type}, #{entity.price}, #{entity.duration})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into course(name, edu, type, price, duration)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.edu}, #{entity.type}, #{entity.price}, #{entity.duration})
        </foreach>
        on duplicate key update
        name = values(name),
        edu = values(edu),
        type = values(type),
        price = values(price),
        duration = values(duration)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update course
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="edu != null">
                edu = #{edu},
            </if>
            <if test="type != null and type != ''">
                type = #{type},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="duration != null">
                duration = #{duration},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from course where id = #{id}
    </delete>

</mapper>

